OperatorFactoryEmitter.errorFailEmit=failed to generate factory class by I/O exception: {0}
OperatorFactoryEmitter.javadocClassSynopsis=An operator factory class about {0}.
OperatorFactoryEmitter.javadocConstructorSynopsis=Creates a new instance.
OperatorFactoryEmitter.javadocFactoryMethodReturn=the created operator instance
OperatorFactoryEmitter.logFailEmit=failed to generate factory class for {0}
OperatorImplementationEmitter.errorFailEmit=failed to generate implementation class by I/O exception: {0}
OperatorImplementationEmitter.javadocClassSynopsis=An operator implementation class about {0}.
OperatorImplementationEmitter.javadocConstructorSynopsis=Creates a new instance.
OperatorImplementationEmitter.logFailEmit=failed to generate implementation class for {0}
OperatorMethodAnalyzer.errorClassFinal=operator class {0} must not be declared as "final"
OperatorMethodAnalyzer.errorClassGeneric=operator class {0} must not have any type parameters
OperatorMethodAnalyzer.errorClassNotNotmalClass=operator class {0} must be just a class
OperatorMethodAnalyzer.errorClassNotPublic=operator class {0} must be declared as "public"
OperatorMethodAnalyzer.errorClassNotTopLevel=operator class {0} must be a top-level class (must be declared on packages directly)
OperatorMethodAnalyzer.errorConstructorException=operator class {0} constructor must not have any exception types
OperatorMethodAnalyzer.errorConstructorGeneric=operator class {0} constructor must not have any type parameters
OperatorMethodAnalyzer.errorConstructorMissing=operator class {0} must have a constructor without any parameters
OperatorMethodAnalyzer.errorConstructorNotPublic=operator class {0} constructor must be declared as "public"
OperatorMethodAnalyzer.errorFailLoadOperatorDriver=failed to load operator annotation driver: {0}
OperatorMethodAnalyzer.errorMethodAmbiguousOperatorAnnotation=operator method {0}.{1} must not have multiple operator annotations ({2}, {3})
OperatorMethodAnalyzer.errorMethodInvalid="{0}" is not a valid operator declaration (is invalid method?)
OperatorMethodAnalyzer.errorMethodInvalidAnnotation=failed to extract annotation "{1}" from "{0}"
OperatorMethodAnalyzer.errorMethodNameConflict=operator method {0}.{1} name is conflict with other method name "{2}"
OperatorMethodAnalyzer.errorMethodNotPublic=operator method {0}.{1} must be declared as "public"
OperatorMethodAnalyzer.errorMethodStatic=operator method {0}.{1} must not be declared as "static"
OperatorMethodAnalyzer.warnClassExtendNotObjectClass=operator class {0} should not be specify super class (extends ...)
OperatorMethodAnalyzer.warnClassImplementInterface=operator class {0} should not be specify interfaces (implements ...)
OperatorMethodAnalyzer.warnClassNotAbstract=operator class {0} should be declared as "abstract"
OperatorMethodAnalyzer.warnMethodPublicOtherThanOperator=operator class {0} should not declare public methods except operators: {1}
